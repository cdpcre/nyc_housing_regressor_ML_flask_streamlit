version: '3.8'

services:
  # Flask Web App + API
  flask-app:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.flask
    ports:
      - "9696:9696"
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
    volumes:
      - ../../models:/app/models:ro
      - ../../data:/app/data:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9696/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - ml-network

  # Streamlit Web App
  streamlit-app:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.streamlit
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ../../models:/app/models:ro
      - ../../data:/app/data:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - ml-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - flask-app
      - streamlit-app
    restart: unless-stopped
    networks:
      - ml-network

networks:
  ml-network:
    driver: bridge

volumes:
  model-data:
    driver: local